
---
name: OCI Env Integration New
on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  integration:
    strategy:
      fail-fast: false
      matrix:
        env:
          - TEST_PROFILE: standalone
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Checkout galaxy_ng
        uses: actions/checkout@v4
        with:
          repository: ansible/galaxy_ng
          path: galaxy_ng
          ref: master

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: test
        run: tree galaxy_ng

      # Note: COMPOSE_INTERACTIVE_NO_CLI=1 is required for oci-env to work correctly when there's no interactive terminal
      - name: Set environment variables
        run: |
          echo "OCI_ENV_PATH=/home/runner/work/galaxy_collection/galaxy_collection/galaxy_ng" >> $GITHUB_ENV
          echo "GALAXY_ENV_PATH=/home/runner/work/galaxy_collection/galaxy_collection/galaxy_ng/" >> $GITHUB_ENV
          echo "COMPOSE_INTERACTIVE_NO_CLI=1" >> $GITHUB_ENV
          echo "OCI_VERBOSE=1" >> $GITHUB_ENV
          echo "GH_DUMP_LOGS=1" >> $GITHUB_ENV
      - name: Update apt
        run: sudo apt -y update

      - name: Install LDAP requirements
        run: sudo apt-get install -y libsasl2-dev python3 libldap2-dev libssl-dev build-essential

      - name: setup oci-env
        run: |
          git clone https://github.com/pulp/oci_env.git /home/runner/work/galaxy_collection/galaxy_collection/galaxy_ng/oci_env/
          pip install -e $OCI_ENV_PATH/oci_env/client/
          mkdir $OCI_ENV_PATH/db_backup/

      - name: ls
        run: pwd

      - name: tree
        run: tree

      - name: create the .compose.env file
        run: rm -f galaxy_ng/.compose.env; cp galaxy_ng/.compose.env.example galaxy_ng/.compose.env

      - name: cat
        run: cat galaxy_ng/.compose.env

      - name: build stack
        working-directory: galaxy_ng
        run: oci-env compose build

      - name: start the compose stack
        working-directory: galaxy_ng
        run: oci-env compose up 

      - name: Build and install the collection
        id: build
        uses: redhat-cop/ansible_collections_tooling/actions/build_ansible_collection@main
        with:
          collection_namespace: galaxy
          collection_name: galaxy
          collection_version: 1.0.0
          collection_repo: https://github.com/ansible/galaxy_collection

      - name: "Perform collection repository tests"
        run: ansible-playbook tests/playbooks/testing_collections_repos.yml -v -e galaxy_ng_version=${{ inputs.galaxy_ng_version }}
...
